plugins {
    id "org.sonarqube" version "2.6.1"
}
apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply from: '../sonarqube.gradle'
apply plugin: 'groovyx.android'


def buildNumber = System.getenv("BUILD_NUMBER") ?: "308"
def versionCodeNumber = Integer.parseInt(buildNumber) + 291
def APP_VERSION = getCurrentVersionName(versionCodeNumber)
ext.set('AppVersion', APP_VERSION)

android {

    compileSdkVersion 26
    buildToolsVersion '26.0.3'
    defaultConfig {
        applicationId "org.worshipsongs"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode versionCodeNumber
        versionName APP_VERSION
        setProperty("archivesBaseName",  "worshipsongs-" + defaultConfig.versionName + ".apk")

    }
    compileOptions.encoding = "UTF-8"

    signingConfigs {
        releaseConfig {
            storeFile file('../worshipsongs-key.jks')
            storePassword System.getenv("WORSHIPSONGS_KEYSTOREPWD")
            keyAlias System.getenv("WORSHIPSONGS_KEYALIAS")
            keyPassword System.getenv("WORSHIPSONGS_KEYPASSWORD")

        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.releaseConfig
            testCoverageEnabled false
        }
        debug {
            minifyEnabled false
            testCoverageEnabled true
        }
    }
    packagingOptions {

        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}

def getCurrentVersionName(versionCodeNumber)
{
    def versionPropertyFile = file('../version.properties')
    def majorVersion
    def minorVersion
    def batchVersion = versionCodeNumber
    def currentVersionName = "2.91"
    if (versionPropertyFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropertyFile))
        majorVersion = versionProps['MAJOR_VERSION'] ?: "3"
        minorVersion = versionProps['MINOR_VERSION'] ?: "0"
        def currentBranch = System.getenv("GIT_BRANCH") ?: "development"
        if (currentBranch.toLowerCase().contains("development")) {
            currentVersionName = majorVersion + "." + minorVersion + "." + batchVersion.toString()
            versionProps['MAJOR_VERSION'] = majorVersion
            versionProps["MINOR_VERSION"] = minorVersion
            versionProps["BATCH_VERSION"] = batchVersion.toString()
            versionProps["VERSION_CODE"] = batchVersion.toString()
            versionProps.store(versionPropertyFile.newWriter(), null)
        } else {
            currentVersionName = majorVersion + "." + minorVersion + "." + batchVersion.toString()
        }
    }
    return currentVersionName
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation files('libs/YouTubeAndroidPlayerApi.jar')
    implementation 'com.android.support:preference-v14:26.1.0'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    implementation 'com.android.support:cardview-v7:26.1.0'
    implementation 'it.neokree:MaterialNavigationDrawer:1.3.3'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'net.margaritov.preference.colorpicker.ColorPickerPreference:ColorPickerPreference:1.0.0'
    implementation 'com.getbase:floatingactionbutton:1.10.1'
    implementation 'com.github.woxthebox:draglistview:1.4.8'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'commons-io:commons-io:2.4'
    implementation 'org.apache.commons:commons-lang3:3.3.2'
    androidTestImplementation('com.android.support.test:runner:0.3') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.json:json:20140107'
    testImplementation 'org.codehaus.groovy:groovy-all:2.4.10'
    testImplementation 'org.spockframework:spock-core:1.1-groovy-2.4-rc-4'
    testImplementation 'org.robolectric:robolectric:3.3.2'
    testImplementation 'org.robolectric:shadows-support-v4:3.0'
    testImplementation 'com.github.hkhc:electricspock:0.5.0.1'
}